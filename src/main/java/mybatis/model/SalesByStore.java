package mybatis.model;

public class SalesByStore {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column public.sales_by_store.store
     *
     * @mbg.generated
     */
    private String store;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column public.sales_by_store.manager
     *
     * @mbg.generated
     */
    private String manager;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column public.sales_by_store.total_sales
     *
     * @mbg.generated
     */
    private Short totalSales;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column public.sales_by_store.store
     *
     * @return the value of public.sales_by_store.store
     *
     * @mbg.generated
     */
    public String getStore() {
        return store;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column public.sales_by_store.store
     *
     * @param store the value for public.sales_by_store.store
     *
     * @mbg.generated
     */
    public void setStore(String store) {
        this.store = store == null ? null : store.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column public.sales_by_store.manager
     *
     * @return the value of public.sales_by_store.manager
     *
     * @mbg.generated
     */
    public String getManager() {
        return manager;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column public.sales_by_store.manager
     *
     * @param manager the value for public.sales_by_store.manager
     *
     * @mbg.generated
     */
    public void setManager(String manager) {
        this.manager = manager == null ? null : manager.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column public.sales_by_store.total_sales
     *
     * @return the value of public.sales_by_store.total_sales
     *
     * @mbg.generated
     */
    public Short getTotalSales() {
        return totalSales;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column public.sales_by_store.total_sales
     *
     * @param totalSales the value for public.sales_by_store.total_sales
     *
     * @mbg.generated
     */
    public void setTotalSales(Short totalSales) {
        this.totalSales = totalSales;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.sales_by_store
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        SalesByStore other = (SalesByStore) that;
        return (this.getStore() == null ? other.getStore() == null : this.getStore().equals(other.getStore()))
            && (this.getManager() == null ? other.getManager() == null : this.getManager().equals(other.getManager()))
            && (this.getTotalSales() == null ? other.getTotalSales() == null : this.getTotalSales().equals(other.getTotalSales()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.sales_by_store
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getStore() == null) ? 0 : getStore().hashCode());
        result = prime * result + ((getManager() == null) ? 0 : getManager().hashCode());
        result = prime * result + ((getTotalSales() == null) ? 0 : getTotalSales().hashCode());
        return result;
    }
}