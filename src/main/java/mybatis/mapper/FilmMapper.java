package mybatis.mapper;

import java.util.List;
import mybatis.model.Film;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface FilmMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.film
     *
     * @mbg.generated
     */
    @Delete({
        "delete from public.film",
        "where film_id = #{filmId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer filmId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.film
     *
     * @mbg.generated
     */
    @Insert({
        "insert into public.film (film_id, title, ",
        "description, release_year, ",
        "language_id, rental_duration, ",
        "rental_rate, length, ",
        "replacement_cost, rating, ",
        "last_update, special_features, ",
        "fulltext)",
        "values (#{filmId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{description,jdbcType=VARCHAR}, #{releaseYear,jdbcType=DISTINCT}, ",
        "#{languageId,jdbcType=SMALLINT}, #{rentalDuration,jdbcType=SMALLINT}, ",
        "#{rentalRate,jdbcType=NUMERIC}, #{length,jdbcType=SMALLINT}, ",
        "#{replacementCost,jdbcType=NUMERIC}, #{rating,jdbcType=VARCHAR}, ",
        "#{lastUpdate,jdbcType=TIMESTAMP}, #{specialFeatures,jdbcType=ARRAY}, ",
        "#{fulltext,jdbcType=OTHER})"
    })
    int insert(Film row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.film
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "film_id, title, description, release_year, language_id, rental_duration, rental_rate, ",
        "length, replacement_cost, rating, last_update, special_features, fulltext",
        "from public.film",
        "where film_id = #{filmId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="film_id", property="filmId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="release_year", property="releaseYear", jdbcType=JdbcType.DISTINCT),
        @Result(column="language_id", property="languageId", jdbcType=JdbcType.SMALLINT),
        @Result(column="rental_duration", property="rentalDuration", jdbcType=JdbcType.SMALLINT),
        @Result(column="rental_rate", property="rentalRate", jdbcType=JdbcType.NUMERIC),
        @Result(column="length", property="length", jdbcType=JdbcType.SMALLINT),
        @Result(column="replacement_cost", property="replacementCost", jdbcType=JdbcType.NUMERIC),
        @Result(column="rating", property="rating", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="special_features", property="specialFeatures", jdbcType=JdbcType.ARRAY),
        @Result(column="fulltext", property="fulltext", jdbcType=JdbcType.OTHER)
    })
    Film selectByPrimaryKey(Integer filmId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.film
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "film_id, title, description, release_year, language_id, rental_duration, rental_rate, ",
        "length, replacement_cost, rating, last_update, special_features, fulltext",
        "from public.film"
    })
    @Results({
        @Result(column="film_id", property="filmId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="release_year", property="releaseYear", jdbcType=JdbcType.DISTINCT),
        @Result(column="language_id", property="languageId", jdbcType=JdbcType.SMALLINT),
        @Result(column="rental_duration", property="rentalDuration", jdbcType=JdbcType.SMALLINT),
        @Result(column="rental_rate", property="rentalRate", jdbcType=JdbcType.NUMERIC),
        @Result(column="length", property="length", jdbcType=JdbcType.SMALLINT),
        @Result(column="replacement_cost", property="replacementCost", jdbcType=JdbcType.NUMERIC),
        @Result(column="rating", property="rating", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="special_features", property="specialFeatures", jdbcType=JdbcType.ARRAY),
        @Result(column="fulltext", property="fulltext", jdbcType=JdbcType.OTHER)
    })
    List<Film> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.film
     *
     * @mbg.generated
     */
    @Update({
        "update public.film",
        "set title = #{title,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
          "release_year = #{releaseYear,jdbcType=DISTINCT},",
          "language_id = #{languageId,jdbcType=SMALLINT},",
          "rental_duration = #{rentalDuration,jdbcType=SMALLINT},",
          "rental_rate = #{rentalRate,jdbcType=NUMERIC},",
          "length = #{length,jdbcType=SMALLINT},",
          "replacement_cost = #{replacementCost,jdbcType=NUMERIC},",
          "rating = #{rating,jdbcType=VARCHAR},",
          "last_update = #{lastUpdate,jdbcType=TIMESTAMP},",
          "special_features = #{specialFeatures,jdbcType=ARRAY},",
          "fulltext = #{fulltext,jdbcType=OTHER}",
        "where film_id = #{filmId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Film row);
}