package mybatis.mapper;

import java.util.List;
import mybatis.model.Address;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface AddressMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.address
     *
     * @mbg.generated
     */
    @Delete({
        "delete from public.address",
        "where address_id = #{addressId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer addressId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.address
     *
     * @mbg.generated
     */
    @Insert({
        "insert into public.address (address_id, address, ",
        "address2, district, ",
        "city_id, postal_code, ",
        "phone, last_update)",
        "values (#{addressId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, ",
        "#{address2,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, ",
        "#{cityId,jdbcType=SMALLINT}, #{postalCode,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{lastUpdate,jdbcType=TIMESTAMP})"
    })
    int insert(Address row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.address
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "address_id, address, address2, district, city_id, postal_code, phone, last_update",
        "from public.address",
        "where address_id = #{addressId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="address2", property="address2", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.SMALLINT),
        @Result(column="postal_code", property="postalCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP)
    })
    Address selectByPrimaryKey(Integer addressId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.address
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "address_id, address, address2, district, city_id, postal_code, phone, last_update",
        "from public.address"
    })
    @Results({
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="address2", property="address2", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.SMALLINT),
        @Result(column="postal_code", property="postalCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_update", property="lastUpdate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Address> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.address
     *
     * @mbg.generated
     */
    @Update({
        "update public.address",
        "set address = #{address,jdbcType=VARCHAR},",
          "address2 = #{address2,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "city_id = #{cityId,jdbcType=SMALLINT},",
          "postal_code = #{postalCode,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "last_update = #{lastUpdate,jdbcType=TIMESTAMP}",
        "where address_id = #{addressId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Address row);
}