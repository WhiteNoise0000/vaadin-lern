package mybatis.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.type.JdbcType;

import mybatis.model.ActorInfo;

@Mapper
public interface ActorInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor_info
     *
     * @mbg.generated
     */
    @Insert({
        "insert into public.actor_info (actor_id, first_name, ",
        "last_name, film_info)",
        "values (#{actorId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, ",
        "#{lastName,jdbcType=VARCHAR}, #{filmInfo,jdbcType=VARCHAR})"
    })
    int insert(ActorInfo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor_info
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "actor_id, first_name, last_name, film_info",
        "from public.actor_info"
    })
    @Results({
        @Result(column="actor_id", property="actorId", jdbcType=JdbcType.INTEGER),
        @Result(column="first_name", property="firstName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_name", property="lastName", jdbcType=JdbcType.VARCHAR),
        @Result(column="film_info", property="filmInfo", jdbcType=JdbcType.VARCHAR)
    })
    List<ActorInfo> selectAll();
    
    @Select({
        "select",
        "actor_id, first_name, last_name, film_info",
        "from public.actor_info",
        "limit #{limit,jdbcType=INTEGER} offset #{offset,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="actor_id", property="actorId", jdbcType=JdbcType.INTEGER),
        @Result(column="first_name", property="firstName", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_name", property="lastName", jdbcType=JdbcType.VARCHAR),
        @Result(column="film_info", property="filmInfo", jdbcType=JdbcType.VARCHAR)
    })
    List<ActorInfo> selectAllForPaging(@Param("limit") int limit, @Param("offset") int offset);
}